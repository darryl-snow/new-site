!function e(n,t,r){function o(c,i){if(!t[c]){if(!n[c]){var u="function"==typeof require&&require;if(!i&&u)return u(c,!0);if(s)return s(c,!0);var a=new Error("Cannot find module '"+c+"'");throw a.code="MODULE_NOT_FOUND",a}var l=t[c]={exports:{}};n[c][0].call(l.exports,function(e){var t=n[c][1][e];return o(t?t:e)},l,l.exports,e,n,t,r)}return t[c].exports}for(var s="function"==typeof require&&require,c=0;c<r.length;c++)o(r[c]);return o}({1:[function(e,n,t){"use strict";var r,o;console.info("WORKER: executing."),o="v1::",r=["","styles/main.min.css","scripts/main.min.js","images/icon.png","images/darryl-snow.jpg","images/darryl-snow.webp","images/fullweb-logo.svg"],self.addEventListener("install",function(e){return console.info("WORKER: install event in progress."),e.waitUntil(caches.open(o+"fundamentals").then(function(e){return e.addAll(r)})).then(function(){return console.info("WORKER: install completed")})}),self.addEventListener("fetch",function(e){var n,t,r;return console.info("WORKER: fetch event in progress."),"GET"!==e.request.method&&console.info("WORKER: fetch event ignored.",e.request.method,e.request.url),/\.jpg$|.png$/.test(e.request.url)&&(r=!1,e.request.headers.has("accept")&&(r=e.request.headers.get("accept").includes("webp")),console.log(r),r&&(n=e.request.clone(),t=n.url.substr(0,n.url.lastIndexOf("."))+".webp",e.respondWith(fetch(t,{mode:"no-cors"})))),e.respondWith(caches.match(e.request).then(function(n){var t,r,s;return r=fetch(e.request).then(t,s)["catch"](s),t=function(n){var t;return t=n.clone(),console.info("WORKER: fetch response from network.",e.request.url),caches.open(o+"pages").then(function(n){return n.put(e.request,t)}).then(function(){return console.info("WORKER: fetch response stored in cache.",e.request.url)}),n},s=function(){return console.info("WORKER: fetch request failed in both cache and network."),new Response("<h1>Service Unavailable</h1>",{status:503,statusText:"Service Unavailable",headers:new Headers({"Content-Type":"text/html"})})},n?console.info("WORKER: fetch event (cached)",e.request.url):console.info("WORKER: fetch event (networked)",e.request.url)}))}),self.addEventListener("activate",function(e){return console.info("WORKER: activate event in progress."),e.waitUntil(caches.keys().then(function(e){return Promise.all(e.filter(function(e){return!e.startsWith(o)})).map(function(e){return caches["delete"](e)})})).then(function(){return console.info("WORKER: activate completed.")})})},{}]},{},[1]);